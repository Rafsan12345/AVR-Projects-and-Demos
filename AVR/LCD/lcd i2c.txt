#define F_CPU 8000000UL // Define CPU frequency
#include <avr/io.h>         // AVR IO library
#include <util/delay.h>    // Delay library
#include <stdint.h>        // Standard integer types

// Define the I2C address for the PCF8574 (LCD I2C expander)
#define PCF8574_ADDR (0x27 << 1) // Shift left to match the I2C address format
void i2c_init_master() {
	TWSR &= 0xF8;              
	TWBR = 0x07;              
	TWCR |= (1 << 2);      
}

void i2c_start() {
	// Send start condition
	TWCR = (1 << 7) | (1 << 5) | (1 << 2);
	while ((TWCR & (1 << 7))==0); // Wait for TWINT flag set
}

void i2c_stop() {
	// Send stop condition
	TWCR = (1 << 4) | (1 << 2)| (1 << 7);
}

void i2c_write(char data) {
	// Write data to I2C
	TWDR = data;               // Load data into data register
	TWCR = (1 << 7) | (1 << 2); // Start transmission
	while ((TWCR & (1 << 7))==0); // Wait for TWINT flag set
}

void cmd_i2c(uint8_t data) {
	
	
	uint8_t k = '\0';
	uint8_t cmd = '\0';
	
	k = data & 0xF0;
	
	cmd = (k | 0x08) & ~(0x01); // RS=0
	
	i2c_start();
	i2c_write(PCF8574_ADDR); // Send the address of the PCF8574
	i2c_write(cmd | 0x04);  // EN=1
	_delay_us(10);
	i2c_write(cmd & (~0x04));  // EN=0
	i2c_stop();

	// Send lower nibble
	k = (data << 4) | 0x08; 
	cmd = (k | 0x08) & (~0x01); 
	
	i2c_start();
	i2c_write(PCF8574_ADDR);
	i2c_write(cmd | 0x04);  // EN=1
	_delay_us(10);
	i2c_write(cmd & (~0x04));  // EN=0
	i2c_stop();
}

void data_i2c(uint8_t data) {
	uint8_t k = '\0';
	uint8_t dat = '\0';
	
	k = data & 0xF0;
	
	dat = k | 0x08 | 0x01; // RS=0
	
	i2c_start();
	i2c_write(PCF8574_ADDR); // Send the address of the PCF8574
	i2c_write(dat | 0x04);  // EN=1
	_delay_us(10);
	i2c_write(dat & (~0x04));  // EN=0
	i2c_stop();

	// Send lower nibble
	k = (data << 4) ;
	dat = k | 0x08 | 0x01; // RS=0
	
	i2c_start();
	i2c_write(PCF8574_ADDR);
	i2c_write(dat | 0x04);  // EN=1
	_delay_us(10);
	i2c_write(dat & (~0x04));  // EN=0
	i2c_stop();
}

void lcd_init() {
	cmd_i2c(0x02);        
	cmd_i2c(0x28);        
	cmd_i2c(0x0E);  
	cmd_i2c(0x01);  
	cmd_i2c(0x80);
	    
}

void disp(const char *data) {

	while (*data != '\0') {
		data_i2c(*data); // Send data to LCD
		data++;
	}
}

int main(void) {
	i2c_init_master();   // Initialize I2C master
	lcd_init();         // Initialize LCD
	_delay_ms(1000);    // Wait before displaying

	disp("   MY NAME IS   "); // Display string on first line
	cmd_i2c(0xC0);      // Move cursor to the second line
	disp("MANASKANT MISHRA"); // Display name on second line

	while (1) {
		// Main loop (the program runs indefinitely)
	}
}
