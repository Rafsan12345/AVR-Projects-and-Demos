/*
 * Project Title : ATmega32 - PWM using Timer1 (Fast PWM, 16-bit)
 * Description   : Generate PWM for Servo Motor on OC1A (PD5).
 * Author        : Your Name
 * Date          : YYYY-MM-DD
 * Datasheet Ref : ATmega32 Datasheet - Timer1 Fast PWM
 */

#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>

void PWM_Timer1_Init(void)
{
    // Set OC1A (PD5) as Output
    DDRD |= (1 << PD5);

    // === Fast PWM Mode 14: ICR1 is TOP ===
    // WGM13=1, WGM12=1, WGM11=1, WGM10=0 → Fast PWM with ICR1 as TOP
    // COM1A1=1 → Non-inverting
    // Prescaler = 64
    TCCR1A = (1 << WGM11) | (1 << COM1A1);
    TCCR1B = (1 << WGM13) | (1 << WGM12) | (1 << CS11) | (1 << CS10);

    // Set TOP for 20ms period (50Hz) -> ICR1 = (F_CPU/(N*50Hz)) - 1
    ICR1 = 2499;   // 8MHz / (64*50) - 1 = 2499

    // Duty Cycle ~1.5ms (Servo Center)
    OCR1A = 187;   // (1.5ms/20ms)*2499 ≈ 187
}

int main(void)
{
    PWM_Timer1_Init();

    while (1)
    {
        // Move Servo from 1ms → 2ms
        for (uint16_t pos = 125; pos < 250; pos++)
        {
            OCR1A = pos;
            _delay_ms(20);
        }

        // Back from 2ms → 1ms
        for (uint16_t pos = 250; pos > 125; pos--)
        {
            OCR1A = pos;
            _delay_ms(20);
        }
    }
}
